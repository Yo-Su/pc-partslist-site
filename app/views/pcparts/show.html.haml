.wrapper
  .header
    = render "parts_lists/header"
  .main
    .side-bar
      .parts-list
        = render "sidebar"
    .contents
      = form_with(model: @parts_list,
        local: true,
        method: :patch,
        url: user_signed_in? ? user_parts_list_path(current_user.id) : nil,
        class: "contents-top__list__select") do |f|
        .contents-top
          .contents-top__name
            = "カテゴリー：#{@category.category}"
            - if user_signed_in?
              = render "updatedb"
          - if user_signed_in?
            .contents-top__list
              %p.list-title パーツリスト
              .select-list
                = f.select :list_id, @parts_lists.map { |parts_list| [parts_list.name, parts_list.id] }, selected: params[:list_id]
        .contents-main
          - case @category.id
          - when 1
            = render partial: "pcparts/category/cpu", collection: @cpus, locals: {:f => f}
          - when 2
            = render partial: "pcparts/category/mb", collection: @mbs, locals: {:f => f}
          - when 3
            = render partial: "pcparts/category/memory", collection: @memories, locals: {:f => f}
          - when 4
            = render partial: "pcparts/category/hdd", collection: @hdds, locals: {:f => f}
          - when 5
            = render partial: "pcparts/category/ssd", collection: @ssds, locals: {:f => f}
          - when 6
            = render partial: "pcparts/category/videocard", collection: @videocards, locals: {:f => f}
          - when 7
            = render partial: "pcparts/category/power", collection: @powers, locals: {:f => f}
          - when 8
            = render partial: "pcparts/category/pccase", collection: @pccases, locals: {:f => f}
          - when 9
            = render partial: "pcparts/category/cpucooler", collection: @cpucoolers, locals: {:f => f}
          - when 10
            = render partial: "pcparts/category/display", collection: @displays, locals: {:f => f}
